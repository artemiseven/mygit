hello git
1, git init
2, git add filename 
3, git commit -m "what i do"
4, git diff filename
5, git reset --hard HEAD^ 》git HEAD回退上一次commit
   git reset --hard commit 》 git 回退到某个commit值
   ！！reset操作前的修改会被冲掉
   git reset HEAD file > 将add后的文件重新退到工作区状态

6, git log --pretty=oneline
   git reflog >查看git对仓库做了哪些操作
7, stage works
8, 删除一个文件后如果是误删
   git checkout filename
   如果的确要删掉
   git rm filename

9, add ssh for github or remote storage
   ssh-keygen -t rsa -C "644618040@qq.com" 

10, git 本地仓库推送到远程
    a. 创建ssh，在github上添加本地公钥
    b. github上创建仓库，将远程仓库地址复杂
    c. git remote add origin https://github/artemiseven/xx
    d. git push -u origin master 第一次提交一般加-u
    e. 远程仓库pull 到本地,第一次可以使用git clone https://github.com/xxx

11, ssh and https
    git支持多种协议,默认使用git://使用ssh,但是一些开放http端口的公司内部无法使用ssh,只能用https,https速度较慢,每次推送需要输入口令.


13, creating anew branch is quick & simple
12, 新建分支工作
    a. 先git checkout -b dev,将当前分支复制作为一个新分支
    b. 在dev分支上修改后提交,再切回master
    c. git merge dev 合并
    d. git branch -d dev 将临时分支删除
    e. 其他 git branch          - 查看分支
            git branch <name>   - 创建分支
	    git checkout <name> - 切换分支
	    git branch -d       - 删除分支

13, git merge 出现conflict时
    a. git 用<<<<<<< ======== >>>>>>> 标记出不同分支内容
    b. 打开有冲突的文件,修改冲突,重新add 和commit
    c. 查看分支合并情况 git log --graph --pretty=oneline --abbrev-commit
    d. 删除之前分支 git branch -d feature

14, git merge --no-ff -m "merge with no-fast forward"
    这样做在log上就可以看到曾经做过合并而fast  forward合并则看不出曾经做过合并

15, git stash 可以把当前工作现场"储藏"起来,等以后恢复现场后继续工作
    a.git stash list 可以查看stash 列表
    b.恢复可以用git stash apply ,但是恢复后stash的内容不会删除,需要删除用git stash drop
    c.git stash pop 恢复的同时会把stash中记录也一起删除
    d.多次git stash 时,会有多个记录在git stash list 中,用git stash apply stash@{xx}来恢复

16, git remote -v > 查看远程仓库信息 ,如果没有push权限是看不到push地址
    git push origin dev 将本地内容推送到远程仓库
    第一次提交修改push时需要指定本地分支和远程分支链接 
    报错 no tracking information 
    git branch --set-upstream dev origin/dev
    
    每次修改前最好先pull一下,一般有冲突时,需要手动解决,之后再本地修改提交后再
    git push origin dev
    
17, git tag > tag是随着commit存在的
    git tag v1.0 > 默认当前分支最新一次commit上打上tag
    git tag v0.9 <commit id>  在commit上打标签
    git tag  查看标签,标签不是按时间列出而是按字母排序
    git show <tagname> 查看标签信息
    git tag -a v1.2 -m "稳定版本" 23243safd  
    -a 表示标签名  -m 标签说明    <commit id>
    git tag -s <tagname> -m "pgp 密钥签名的tag"





 





    

